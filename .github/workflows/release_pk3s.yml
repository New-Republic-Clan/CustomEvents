name: CI
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: for i in */; do cd "$i"; zip -r "../${i%/}.pk3" *; cd ..; done
        
      - name: Generate combined ZIP
        run: zip -r custom-maps.zip *.pk3       

      - name: Delete Release
        uses: ame-yu/action-delete-latest-release@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "Latest"
          release_name: Latest
          draft: false
          prerelease: false
          
      - name: Upload PK3 Assets to Release with a wildcard
        uses: csexton/release-asset-action@v2
        with:
          pattern: "*.pk3"
          github-token: ${{ secrets.GITHUB_TOKEN }}    
          release-url: ${{ steps.create_release.outputs.upload_url }}       

      - name: Upload ZIP Assets to Release
        uses: csexton/release-asset-action@v2
        with:
          pattern: "*.zip"
          github-token: ${{ secrets.GITHUB_TOKEN }}    
          release-url: ${{ steps.create_release.outputs.upload_url }} 

      - name: copy PK3s via SCP to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: 22
          source: "*.pk3"
          target: "/opt/openjk/MBII"         
          
      - name: Restart events instance
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: 22
          script: ${{ secrets.SERVER_RESTART_EVENTS }}   
          command_timeout: 30s
          
      - name: Discord notification1
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_BOTS }}
        uses: Ilshidur/action-discord@master
        with:
          args: "**${{github.event.head_commit.author.name}}** : ${{ github.event.head_commit.message }}"          
          
      - name: Discord notification2
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_BOTS }}
        uses: Ilshidur/action-discord@master
        with:
          args: ${{ secrets.DISCORD_PK3S_UPDATED }}
